name: Build Windows
on:
  workflow_call:

jobs:
  build:
    runs-on: windows-latest
    name: build ${{ matrix.target }}
    strategy:
      matrix:
        target: [
          i686-pc-windows-msvc,
          x86_64-pc-windows-msvc,
        ]
    steps:
    - name: check artifact exists
      uses: xSAVIKx/artifact-exists-action@v0
      id: check_artifact_exists
      with:
        name: sdk-bindings-${{ github.sha }}-${{ matrix.target }}

    - name: checkout
      if: steps.check_artifact_exists.outputs.exists == 'false'
      uses: actions/checkout@v3

    - name: Install rust toolchain
      if: steps.check_artifact_exists.outputs.exists == 'false'
      run: |
        rustup set auto-self-update disable
        rustup toolchain install stable --profile minimal
        rustup target add ${{ matrix.target }}

    - name: Install protobuf compiler
      if: steps.check_artifact_exists.outputs.exists == 'false'
      run: |
        $ProgressPreference = "SilentlyContinue"
        Invoke-WebRequest https://github.com/protocolbuffers/protobuf/releases/download/v23.4/protoc-23.4-win64.zip -OutFile protoc-23.4-win64.zip
        Expand-Archive -Path protoc-23.4-win64.zip -DestinationPath .\protobuf
        dir .\protobuf\bin
        Add-Content $env:GITHUB_PATH "$((Get-Item .\protobuf\bin).FullName)"
      shell: powershell

    - uses: Swatinem/rust-cache@v2
      if: steps.check_artifact_exists.outputs.exists == 'false'
      with:
        workspaces: libs

    - name: Build Breez 
      if: steps.check_artifact_exists.outputs.exists == 'false'
      working-directory: libs/sdk-bindings
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Archive release
      if: steps.check_artifact_exists.outputs.exists == 'false'
      uses: actions/upload-artifact@v3
      with:
        name: sdk-bindings-${{ github.sha }}-${{ matrix.target }}
        path: libs/target/${{ matrix.target }}/release/breez_sdk_bindings.dll
